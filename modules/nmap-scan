#!/bin/bash

# Nmap Module
MODULES_DIR="modules"
NMAP_CONFIG="$MODULES_DIR/nmap_config.conf"
NMAP_LOG_DIR="$MODULES_DIR/logs"
mkdir -p "$NMAP_LOG_DIR"

# Reads configuration value
read_config() {
    local key=$1
    grep "^$key=" "$NMAP_CONFIG" | cut -d'=' -f2
}

# Writes configuration value
write_config() {
    local key=$1
    local value=$2
    if grep -q "^$key=" "$NMAP_CONFIG"; then
        sed -i "s/^$key=.*/$key=$value/" "$NMAP_CONFIG"
    else
        echo "$key=$value" >> "$NMAP_CONFIG"
    fi
}

# Configure Target
configure_target() {
    local target=$(read_config target)
    target=$(dialog --inputbox "Enter target IP/Hostname:" 8 40 "$target" 3>&1 1>&2 2>&3)
    write_config target "$target"
}

# Configure Nmap Profile
configure_profile() {
    local profile=$(read_config profile)
    profile=$(dialog --menu "Select Nmap Profile:" 15 50 5 \
        1 "Intense scan" \
        2 "Intense scan plus UDP" \
        3 "Intense scan, all TCP ports" \
        4 "Ping scan" \
        5 "Quick scan" \
        --stdout)
    write_config profile "$profile"
}

# Execute Nmap Scan
execute_scan() {
    local target=$(read_config target)
    local profile=$(read_config profile)
    local log_file="$NMAP_LOG_DIR/nmap_$(date +"%Y-%m-%d_%H-%M").log"
    local cmd="nmap"

    case $profile in
        1) cmd="$cmd -T4 -A -v";;
        2) cmd="$cmd -sS -sU -T4 -A -v";;
        3) cmd="$cmd -p 1-65535 -T4 -A -v";;
        4) cmd="$cmd -sn";;
        5) cmd="$cmd -T4 -F";;
        *) echo "Invalid profile"; return;;
    esac

    cmd="$cmd $target > $log_file"
    eval $cmd

    dialog --textbox "$log_file" 20 60
}

# Nmap Module Menu
while true; do
    CHOICE=$(dialog --menu "Nmap Module" 15 50 4 \
        1 "Configure Target" \
        2 "Configure Profile" \
        3 "Execute Scan" \
        4 "Exit" \
        --stdout)
    
    case $CHOICE in
        1) configure_target ;;
        2) configure_profile ;;
        3) execute_scan ;;
        4) break ;;
    esac
done
